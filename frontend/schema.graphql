schema {
    query: RootQuery
    mutation: RootMutation
}

type RootQuery {
    """
    A simple hello world query
    """
    helloWorld: String!

    """
    Retrieve the list of projects
    """
    projects(skip: Int! = 0, take: Int! = 10): ProjectResult!
}

type RootMutation {
    addProject(name: String!, description: String!, git: String): Project!
    setProjectActive(id: String!, setActive: Boolean!): OperationResult!
    editProject(
        id: String!
        name: String!
        description: String!
        git: String = ""
    ): OperationResult!
}

type ProjectResult {
    nodes: [Project!]!
    errors: [String!]!
    count: Int!
}

type Project {
    id: String!
    name: String!
    description: String!
    createdAt: DateTime!
    updatedAt: DateTime!
    image: Image
    git: String
    active: Boolean!
}

type OperationResult {
    succeeded: Boolean!
    message: String!
}

type Image {
    id: Int!
    fileName: String!
    contentType: String!
    altText: String!
    title: String!
    createdAt: DateTime!
    updatedAt: DateTime!
    size: Long!
    projectId: String!
    project: Project!
}

"""
The `DateTime` scalar represents an ISO-8601 compliant date time type.
"""
scalar DateTime @specifiedBy(url: "https://www.graphql-scalars.com/date-time")

"""
The `Long` scalar type represents non-fractional signed whole 64-bit numeric values. Long can represent values between -(2^63) and 2^63 - 1.
"""
scalar Long
